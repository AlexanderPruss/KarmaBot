workflows:
  version: 2
  build-deploy:
    jobs:
      - test
      - package:
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - package
          filters:
            branches:
              only: master

version: 2
jobs:
  test:
    docker:
      - image: circleci/node:8.12.0
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - "./node_modules"
      - run: npm run build
      - run: node script/PreinstallMongoUnit.js
      - run: npm run test

  package:
    docker:
      - image: circleci/node:8.12.0
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - "./node_modules"
      - run: npm run build
      - run: rm -r node_modules
      - restore_cache:
          key: deployment-{{ .Branch }}-{{ checksum "package.json" }}
      - run: npm install --production
      - save_cache:
          key: deployment-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - "./node_modules"
      - run: node config/CreateCircleConfig.js
      - run: mkdir karmabotdeployment
      - run: mkdir deploymentworkspace
      - run: mv node_modules karmabotdeployment
      - run: mv dist/* karmabotdeployment/
      - run: mv config karmabotdeployment
      - run: mv karmabotdeployment/config/circleci.json karmabotdeployment/config/production.json
      - run:
          name: "Zip the deployment package without the surrounding folder."
          command: zip -r ../karmabotdeployment.zip ./*
          working_directory: karmabotdeployment
      - run: mv karmabotdeployment.zip deploymentworkspace/karmabotdeployment.zip
      - run: npm version | grep karmabot | sed "s/{ karmabot: '//" | sed "s/',//" > deploymentworkspace/version

      - persist_to_workspace:
          root: deploymentworkspace
          paths:
            - karmabotdeployment.zip
            - version

  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    steps:
      - attach_workspace:
          at: deploymentworkspace
      - run: ls
      - run: ls deploymentworkspace
      - run: sudo pip install awscli
      - run: aws s3 cp deploymentworkspace/karmabotdeployment.zip s3://karmabotdeployment/karmabotdeployment-$(cat version).zip
      - run: aws lambda update-function-code --function-name karmabotRespondToSlack --s3-bucket karmabotdeployment --s3-key karmabotdeployment-$(cat version).zip --region eu-central-1
